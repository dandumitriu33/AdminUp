@model AdminUp.Models.MonthlyExpensesViewModel

@{
    ViewData["Title"] = "Home Page";
    string buildingId = "2";
}

<div class="text-center">
    <h2>@Model.Building.Name</h2>
    <p>@Model.Building.Address</p>
    <h1>@Model.Month @Model.Year</h1>
    <hr />
    <h3>Latest Announcement (<a asp-controller="building" asp-action="announcements" asp-route-buildingId="@buildingId">all</a>): 
    @Model.Announcements[0].DateAdded - @Model.Announcements[0].Message 
        </h3>
    <hr />

    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Number</th>
                <th scope="col">Owner</th>
                <th scope="col">No. of Inhabitants</th>
                @{
                    decimal totalBuildingExpenses = 0;
                }
                @foreach (var bill in Model.Bills)
                {
                    totalBuildingExpenses = totalBuildingExpenses + bill.Total;
                    <th scope="col" title="Bill Total / Total Building Inhabitants * Appartment No. of Inhabitants">@bill.IssuerName</th>
                }
                <th scope="col">Number</th>
            </tr>
        </thead>
        <tbody>
            @{ int totalInhabitants = 0; }
            @foreach (var appartment in Model.Appartments)
            {
                decimal totalAppartmentExpenses = 0;
                totalInhabitants += appartment.NumberOfInhabitants;
                <tr>
                    <td>@appartment.Number</td>
                    <td>@appartment.AppartmentOwnerFirstName @appartment.AppartmentOwnerLastName</td>
                    <td>@appartment.NumberOfInhabitants</td>
                    @foreach (var bill in Model.Bills)
                    {
                        <td>
                            @Math.Round(bill.Total / Model.TotalInhabitants * appartment.NumberOfInhabitants, 2)    
                        </td>
                        totalAppartmentExpenses = totalAppartmentExpenses + Math.Round(bill.Total / Model.TotalInhabitants * appartment.NumberOfInhabitants, 2);
                    }
                    <td>@totalAppartmentExpenses</td>
                    <td>@appartment.Number</td>
                </tr>
            }
            <tr>
                <td> - </td>
                <td> - </td>
                <td>@totalInhabitants</td>
                @foreach (var bill in Model.Bills)
                {
                    <td>@Math.Round(bill.Total, 2)</td>
                }
                <td>@Math.Round(totalBuildingExpenses, 2)</td>
                <td> - </td>
            </tr>
        </tbody>
    </table>
    
</div>
